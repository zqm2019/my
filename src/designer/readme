/**
 * 本目录将记录23种设计模式，使用方式
 * 附带简单的demo 便于理解
 *
 * 总原则：开闭原则，既对扩展开放，对修改关闭
 * 1.单一职责原则：每个类都应该实现单一的职责，只做一件事，如若不然就应该把该类拆分成多个类；
 * 2.里氏替换原则(LSP)：任何基类可以出现的地方，其子类一定可以出现；
 * 3.依赖倒转原则：开闭原则的基础，具体内容是面向接口编程，依赖抽象而不依赖具体；
 * 4.接口隔离原则：每个接口不存在子类用不到却必须实现的方法，如果有，那么就要将接口拆分；
 * 5.迪米特法则(DP,demeter principle)：又名"知道最少原则",一个类对自己依赖的类知道的越少越好，被依赖的类只需提供一个public方法对
 *    对提供功能，而其他细节的实现只设置为private；
 * 6. 合成服用原则：尽量使用合成/聚合分方式，而不是使用extends。
 */

